{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shantanu\\\\chatting_application\\\\src\\\\components\\\\ChatRoom.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { collection, query, orderBy, limit, addDoc, serverTimestamp, getDocs } from 'firebase/firestore';\nimport { firestore, auth } from '../firebase';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport ChatMessage from './ChatMessage';\nimport Slider from './Slider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction genID(a, b) {\n  return [a, b].sort().join('_');\n}\nfunction ChatRoom() {\n  _s();\n  const [receiverUid, setReceiverUid] = useState(null);\n  const [formValue, setFormValue] = useState('');\n  const [error, setError] = useState('');\n  const [messagesRef, setMessagesRef] = useState(null);\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [users, setUsers] = useState([]);\n  const [messages] = useCollectionData(messagesRef, {\n    idField: 'id'\n  });\n\n  // Fetch users from Firestore\n  useEffect(() => {\n    const fetchUsers = async () => {\n      const usersRef = collection(firestore, 'users');\n      const q = query(usersRef);\n      const userDocs = await getDocs(q);\n      const fetchedUsers = userDocs.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setUsers(fetchedUsers);\n    };\n    fetchUsers();\n  }, []);\n  useEffect(() => {\n    if (receiverUid && auth.currentUser) {\n      const newMessagesRef = collection(firestore, `conversations/${genID(auth.currentUser.uid, receiverUid)}/messages`);\n      const q = query(newMessagesRef, orderBy('createdAt'), limit(25));\n      setMessagesRef(q);\n    } else {\n      setMessagesRef(null); // Reset when no user is selected\n    }\n  }, [receiverUid, auth.currentUser]);\n  const sendMessage = async e => {\n    e.preventDefault();\n    if (!auth.currentUser || !receiverUid) {\n      setError('You must select a user and be logged in to send messages.');\n      return;\n    }\n    try {\n      await addDoc(collection(firestore, `conversations/${genID(auth.currentUser.uid, receiverUid)}/messages`), {\n        text: formValue.trim(),\n        createdAt: serverTimestamp(),\n        from_uid: auth.currentUser.uid,\n        to_uid: receiverUid\n      });\n      setFormValue('');\n      setError('');\n    } catch (err) {\n      console.error('Error sending message:', err);\n      setError('Failed to send message. Please try again.');\n    }\n  };\n  const addUser = async () => {\n    // Check if email and name are provided\n    if (!email || !name) {\n      setError('Email and name are required.');\n      return;\n    }\n\n    // Check if the email already exists\n    const usersRef = collection(firestore, 'users');\n    const q = query(usersRef); // Get all users\n\n    const existingUsers = await getDocs(q);\n    const emailExists = existingUsers.docs.some(doc => doc.data().email === email);\n    if (emailExists) {\n      setError('Email already exists. Please use a different email.');\n      return;\n    }\n    try {\n      // Add new user to Firestore\n      await addDoc(collection(firestore, 'users'), {\n        email: email,\n        displayName: name,\n        photo: '/public/Profile_images/' // Replace with actual photo URL or logic to get it\n      });\n\n      // Clear input fields after successfully adding the user\n      setEmail('');\n      setName('');\n      setError('');\n      // Refresh the users list to include the new user\n      const usersSnapshot = await getDocs(usersRef);\n      const fetchedUsers = usersSnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setUsers(fetchedUsers);\n    } catch (err) {\n      console.error('Error adding user:', err);\n      setError('Failed to add user. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-none w-1/4 h-full p-5 bg-gray-800\",\n      children: auth.currentUser && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          placeholder: \"Email\",\n          className: \"p-2 rounded mb-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          placeholder: \"Name\",\n          className: \"p-2 rounded mb-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addUser,\n          className: \"bg-blue-500 text-white p-2 rounded\",\n          children: \"Add User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-red-500\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(Slider, {\n          users: users.filter(u => u.id !== auth.currentUser.uid),\n          selectUserToChat: user => setReceiverUid(user.id),\n          selectedUserId: receiverUid\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow flex flex-col pt-5 pr-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"flex-grow overflow-auto p-4 rounded-xl bg-gradient-to-br from-indigo-900 via-purple-900 to-gray-900 shadow-inner\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: messages && messages.map((msg, i) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n            message: msg\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: sendMessage,\n        className: \"bg-gray-800 p-4 mb-5 flex items-center bg-gradient-to-br via-purple-900 from-indigo-900 to-gray-900 space-x-2 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: formValue,\n          onChange: e => setFormValue(e.target.value),\n          placeholder: \"Say something nice\",\n          className: \"flex-grow p-2 text-lg bg-gray-700 text-white border border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-600 shadow-inner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !formValue || !receiverUid,\n          className: \"w-16 h-12 bg-blue-600 rounded-lg flex items-center justify-center text-white text-2xl shadow-lg hover:bg-blue-700 disabled:opacity-50 transition-all duration-200 transform hover:scale-105\",\n          children: \"\\uD83D\\uDD4A\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 text-center mt-4\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatRoom, \"qwly08apqbyniB6US9sfvAO0pvM=\", false, function () {\n  return [useCollectionData];\n});\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useState","useEffect","collection","query","orderBy","limit","addDoc","serverTimestamp","getDocs","firestore","auth","useCollectionData","ChatMessage","Slider","jsxDEV","_jsxDEV","genID","a","b","sort","join","ChatRoom","_s","receiverUid","setReceiverUid","formValue","setFormValue","error","setError","messagesRef","setMessagesRef","email","setEmail","name","setName","users","setUsers","messages","idField","fetchUsers","usersRef","q","userDocs","fetchedUsers","docs","map","doc","id","data","currentUser","newMessagesRef","uid","sendMessage","e","preventDefault","text","trim","createdAt","from_uid","to_uid","err","console","addUser","existingUsers","emailExists","some","displayName","photo","usersSnapshot","className","children","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","filter","u","selectUserToChat","user","selectedUserId","msg","i","message","onSubmit","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Shantanu/chatting_application/src/components/ChatRoom.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { collection, query, orderBy, limit, addDoc, serverTimestamp, getDocs } from 'firebase/firestore'; \r\nimport { firestore, auth } from '../firebase'; \r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\nimport ChatMessage from './ChatMessage';\r\nimport Slider from './Slider';\r\n\r\nfunction genID(a, b) {\r\n  return [a, b].sort().join('_');\r\n}\r\n\r\nfunction ChatRoom() {\r\n  const [receiverUid, setReceiverUid] = useState(null);\r\n  const [formValue, setFormValue] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [messagesRef, setMessagesRef] = useState(null);\r\n  const [email, setEmail] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [users, setUsers] = useState([]);\r\n\r\n  const [messages] = useCollectionData(messagesRef, { idField: 'id' });\r\n\r\n  // Fetch users from Firestore\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      const usersRef = collection(firestore, 'users');\r\n      const q = query(usersRef);\r\n      const userDocs = await getDocs(q);\r\n      const fetchedUsers = userDocs.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n      setUsers(fetchedUsers);\r\n    };\r\n\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (receiverUid && auth.currentUser) {\r\n      const newMessagesRef = collection(\r\n        firestore, \r\n        `conversations/${genID(auth.currentUser.uid, receiverUid)}/messages`\r\n      );\r\n      const q = query(newMessagesRef, orderBy('createdAt'), limit(25));\r\n      setMessagesRef(q);\r\n    } else {\r\n      setMessagesRef(null); // Reset when no user is selected\r\n    }\r\n  }, [receiverUid, auth.currentUser]);\r\n\r\n  const sendMessage = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!auth.currentUser || !receiverUid) {\r\n      setError('You must select a user and be logged in to send messages.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await addDoc(collection(\r\n        firestore, \r\n        `conversations/${genID(auth.currentUser.uid, receiverUid)}/messages`\r\n      ), {\r\n        text: formValue.trim(),\r\n        createdAt: serverTimestamp(),\r\n        from_uid: auth.currentUser.uid,\r\n        to_uid: receiverUid,\r\n      });\r\n\r\n      setFormValue('');\r\n      setError('');\r\n    } catch (err) {\r\n      console.error('Error sending message:', err);\r\n      setError('Failed to send message. Please try again.');\r\n    }\r\n  };\r\n\r\n  const addUser = async () => {\r\n    // Check if email and name are provided\r\n    if (!email || !name) {\r\n      setError('Email and name are required.');\r\n      return;\r\n    }\r\n\r\n    // Check if the email already exists\r\n    const usersRef = collection(firestore, 'users');\r\n    const q = query(usersRef);  // Get all users\r\n\r\n    const existingUsers = await getDocs(q);\r\n    const emailExists = existingUsers.docs.some(doc => doc.data().email === email);\r\n\r\n    if (emailExists) {\r\n      setError('Email already exists. Please use a different email.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Add new user to Firestore\r\n      await addDoc(collection(firestore, 'users'), {\r\n        email: email,\r\n        displayName: name,\r\n        photo: '/public/Profile_images/', // Replace with actual photo URL or logic to get it\r\n      });\r\n\r\n      // Clear input fields after successfully adding the user\r\n      setEmail('');\r\n      setName('');\r\n      setError('');\r\n      // Refresh the users list to include the new user\r\n      const usersSnapshot = await getDocs(usersRef);\r\n      const fetchedUsers = usersSnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n      setUsers(fetchedUsers);\r\n    } catch (err) {\r\n      console.error('Error adding user:', err);\r\n      setError('Failed to add user. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex h-screen\">\r\n      <div className=\"flex-none w-1/4 h-full p-5 bg-gray-800\">\r\n        {auth.currentUser && (\r\n          <div>\r\n            <input \r\n              type=\"text\" \r\n              value={email} \r\n              onChange={(e) => setEmail(e.target.value)} \r\n              placeholder=\"Email\" \r\n              className=\"p-2 rounded mb-2\"\r\n            />\r\n            <input \r\n              type=\"text\" \r\n              value={name} \r\n              onChange={(e) => setName(e.target.value)} \r\n              placeholder=\"Name\" \r\n              className=\"p-2 rounded mb-2\"\r\n            />\r\n            <button onClick={addUser} className=\"bg-blue-500 text-white p-2 rounded\">\r\n              Add User\r\n            </button>\r\n            {error && <p className=\"text-red-500\">{error}</p>}\r\n            <Slider \r\n              users={users.filter((u) => u.id !== auth.currentUser.uid)} \r\n              selectUserToChat={(user) => setReceiverUid(user.id)} \r\n              selectedUserId={receiverUid} \r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"flex-grow flex flex-col pt-5 pr-5\">\r\n        <main className=\"flex-grow overflow-auto p-4 rounded-xl bg-gradient-to-br from-indigo-900 via-purple-900 to-gray-900 shadow-inner\">\r\n          <div className=\"space-y-4\">\r\n            {messages && messages.map((msg, i) => (\r\n              <ChatMessage key={i} message={msg} />\r\n            ))}\r\n          </div>\r\n        </main>\r\n\r\n        <form \r\n          onSubmit={sendMessage} \r\n          className=\"bg-gray-800 p-4 mb-5 flex items-center bg-gradient-to-br via-purple-900 from-indigo-900 to-gray-900 space-x-2 rounded-lg\"\r\n        >\r\n          <input\r\n            value={formValue}\r\n            onChange={(e) => setFormValue(e.target.value)}\r\n            placeholder=\"Say something nice\"\r\n            className=\"flex-grow p-2 text-lg bg-gray-700 text-white border border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-600 shadow-inner\"\r\n          />\r\n          <button \r\n            type=\"submit\" \r\n            disabled={!formValue || !receiverUid}\r\n            className=\"w-16 h-12 bg-blue-600 rounded-lg flex items-center justify-center text-white text-2xl shadow-lg hover:bg-blue-700 disabled:opacity-50 transition-all duration-200 transform hover:scale-105\"\r\n          >\r\n            🕊️\r\n          </button>\r\n        </form>\r\n\r\n        {error && <p className=\"text-red-500 text-center mt-4\">{error}</p>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatRoom;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}