{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shantanu\\\\chatting_application\\\\src\\\\components\\\\ChatRoom.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { firestore, auth } from '../firebase';\nimport { onSnapshot, collection, doc, updateDoc } from 'firebase/firestore';\nimport UserModal from './UserModal';\nimport Slider from './Slider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatRoom() {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [receiverUid, setReceiverUid] = useState(null);\n  const acceptInvite = async inviteId => {\n    const currentUser = auth.currentUser;\n    if (!currentUser) return;\n    const inviteDoc = doc(firestore, `users/${currentUser.uid}/invites/${inviteId}`);\n    await updateDoc(inviteDoc, {\n      status: 'accepted'\n    });\n  };\n  useEffect(() => {\n    const currentUser = auth.currentUser;\n    if (!currentUser) return;\n    const unsubscribe = onSnapshot(collection(firestore, `users/${currentUser.uid}/invites`), snapshot => {\n      snapshot.docs.forEach(doc => {\n        const invite = doc.data();\n        if (invite.status === 'pending') {\n          const accept = window.confirm(`${invite.fromName} invited you. Accept?`);\n          if (accept) acceptInvite(doc.id);\n        }\n      });\n    });\n    return () => unsubscribe();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/4 h-full p-5 bg-gray-800\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsModalOpen(true),\n        className: \"mb-4 bg-green-500 text-white p-2 rounded\",\n        children: \"Add User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Slider, {\n        selectUserToChat: user => setReceiverUid(user.id),\n        selectedUserId: receiverUid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserModal, {\n      isOpen: isModalOpen,\n      onClose: () => setIsModalOpen(false),\n      onInviteSent: () => {}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatRoom, \"IqKpvx13ofAj0Fk1PtHolGY/bpU=\");\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useState","useEffect","firestore","auth","onSnapshot","collection","doc","updateDoc","UserModal","Slider","jsxDEV","_jsxDEV","ChatRoom","_s","isModalOpen","setIsModalOpen","receiverUid","setReceiverUid","acceptInvite","inviteId","currentUser","inviteDoc","uid","status","unsubscribe","snapshot","docs","forEach","invite","data","accept","window","confirm","fromName","id","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","selectUserToChat","user","selectedUserId","isOpen","onClose","onInviteSent","_c","$RefreshReg$"],"sources":["C:/Users/Shantanu/chatting_application/src/components/ChatRoom.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { firestore, auth } from '../firebase';\r\nimport { onSnapshot, collection, doc, updateDoc } from 'firebase/firestore';\r\nimport UserModal from './UserModal';\r\nimport Slider from './Slider';\r\n\r\nfunction ChatRoom() {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [receiverUid, setReceiverUid] = useState(null);\r\n\r\n  const acceptInvite = async (inviteId) => {\r\n    const currentUser = auth.currentUser;\r\n    if (!currentUser) return;\r\n\r\n    const inviteDoc = doc(firestore, `users/${currentUser.uid}/invites/${inviteId}`);\r\n    await updateDoc(inviteDoc, { status: 'accepted' });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const currentUser = auth.currentUser;\r\n    if (!currentUser) return;\r\n\r\n    const unsubscribe = onSnapshot(\r\n      collection(firestore, `users/${currentUser.uid}/invites`),\r\n      (snapshot) => {\r\n        snapshot.docs.forEach(doc => {\r\n          const invite = doc.data();\r\n          if (invite.status === 'pending') {\r\n            const accept = window.confirm(`${invite.fromName} invited you. Accept?`);\r\n            if (accept) acceptInvite(doc.id);\r\n          }\r\n        });\r\n      }\r\n    );\r\n\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"flex h-screen\">\r\n      <div className=\"w-1/4 h-full p-5 bg-gray-800\">\r\n        <button onClick={() => setIsModalOpen(true)} className=\"mb-4 bg-green-500 text-white p-2 rounded\">Add User</button>\r\n        <Slider selectUserToChat={(user) => setReceiverUid(user.id)} selectedUserId={receiverUid} />\r\n      </div>\r\n\r\n      <UserModal\r\n        isOpen={isModalOpen}\r\n        onClose={() => setIsModalOpen(false)}\r\n        onInviteSent={() => {}}\r\n      />\r\n      {/* Chat functionality would go here */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatRoom;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}