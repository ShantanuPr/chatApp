{"ast":null,"code":"import React,{useState,useEffect}from'react';import{firestore,auth}from'../firebase';import{onSnapshot,collection,doc,updateDoc}from'firebase/firestore';import UserModal from'./UserModal';import Slider from'./Slider';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ChatRoom(){const[isModalOpen,setIsModalOpen]=useState(false);const[receiverUid,setReceiverUid]=useState(null);const acceptInvite=async inviteId=>{const currentUser=auth.currentUser;if(!currentUser)return;const inviteDoc=doc(firestore,`users/${currentUser.uid}/invites/${inviteId}`);await updateDoc(inviteDoc,{status:'accepted'});};useEffect(()=>{const currentUser=auth.currentUser;if(!currentUser)return;const unsubscribe=onSnapshot(collection(firestore,`users/${currentUser.uid}/invites`),snapshot=>{snapshot.docs.forEach(doc=>{const invite=doc.data();if(invite.status==='pending'){const accept=window.confirm(`${invite.fromName} invited you. Accept?`);if(accept)acceptInvite(doc.id);}});});return()=>unsubscribe();},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"flex h-screen\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"w-1/4 h-full p-5 bg-gray-800\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setIsModalOpen(true),className:\"mb-4 bg-green-500 text-white p-2 rounded\",children:\"Add User\"}),/*#__PURE__*/_jsx(Slider,{selectUserToChat:user=>setReceiverUid(user.id),selectedUserId:receiverUid})]}),/*#__PURE__*/_jsx(UserModal,{isOpen:isModalOpen,onClose:()=>setIsModalOpen(false),onInviteSent:()=>{}})]});}export default ChatRoom;","map":{"version":3,"names":["React","useState","useEffect","firestore","auth","onSnapshot","collection","doc","updateDoc","UserModal","Slider","jsx","_jsx","jsxs","_jsxs","ChatRoom","isModalOpen","setIsModalOpen","receiverUid","setReceiverUid","acceptInvite","inviteId","currentUser","inviteDoc","uid","status","unsubscribe","snapshot","docs","forEach","invite","data","accept","window","confirm","fromName","id","className","children","onClick","selectUserToChat","user","selectedUserId","isOpen","onClose","onInviteSent"],"sources":["C:/Users/Shantanu/chatting_application/src/components/ChatRoom.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { firestore, auth } from '../firebase';\r\nimport { onSnapshot, collection, doc, updateDoc } from 'firebase/firestore';\r\nimport UserModal from './UserModal';\r\nimport Slider from './Slider';\r\n\r\nfunction ChatRoom() {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [receiverUid, setReceiverUid] = useState(null);\r\n\r\n  const acceptInvite = async (inviteId) => {\r\n    const currentUser = auth.currentUser;\r\n    if (!currentUser) return;\r\n\r\n    const inviteDoc = doc(firestore, `users/${currentUser.uid}/invites/${inviteId}`);\r\n    await updateDoc(inviteDoc, { status: 'accepted' });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const currentUser = auth.currentUser;\r\n    if (!currentUser) return;\r\n\r\n    const unsubscribe = onSnapshot(\r\n      collection(firestore, `users/${currentUser.uid}/invites`),\r\n      (snapshot) => {\r\n        snapshot.docs.forEach(doc => {\r\n          const invite = doc.data();\r\n          if (invite.status === 'pending') {\r\n            const accept = window.confirm(`${invite.fromName} invited you. Accept?`);\r\n            if (accept) acceptInvite(doc.id);\r\n          }\r\n        });\r\n      }\r\n    );\r\n\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"flex h-screen\">\r\n      <div className=\"w-1/4 h-full p-5 bg-gray-800\">\r\n        <button onClick={() => setIsModalOpen(true)} className=\"mb-4 bg-green-500 text-white p-2 rounded\">Add User</button>\r\n        <Slider selectUserToChat={(user) => setReceiverUid(user.id)} selectedUserId={receiverUid} />\r\n      </div>\r\n\r\n      <UserModal\r\n        isOpen={isModalOpen}\r\n        onClose={() => setIsModalOpen(false)}\r\n        onInviteSent={() => {}}\r\n      />\r\n      {/* Chat functionality would go here */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatRoom;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,SAAS,CAAEC,IAAI,KAAQ,aAAa,CAC7C,OAASC,UAAU,CAAEC,UAAU,CAAEC,GAAG,CAAEC,SAAS,KAAQ,oBAAoB,CAC3E,MAAO,CAAAC,SAAS,KAAM,aAAa,CACnC,MAAO,CAAAC,MAAM,KAAM,UAAU,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE9B,QAAS,CAAAC,QAAQA,CAAA,CAAG,CAClB,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGhB,QAAQ,CAAC,KAAK,CAAC,CACrD,KAAM,CAACiB,WAAW,CAAEC,cAAc,CAAC,CAAGlB,QAAQ,CAAC,IAAI,CAAC,CAEpD,KAAM,CAAAmB,YAAY,CAAG,KAAO,CAAAC,QAAQ,EAAK,CACvC,KAAM,CAAAC,WAAW,CAAGlB,IAAI,CAACkB,WAAW,CACpC,GAAI,CAACA,WAAW,CAAE,OAElB,KAAM,CAAAC,SAAS,CAAGhB,GAAG,CAACJ,SAAS,CAAE,SAASmB,WAAW,CAACE,GAAG,YAAYH,QAAQ,EAAE,CAAC,CAChF,KAAM,CAAAb,SAAS,CAACe,SAAS,CAAE,CAAEE,MAAM,CAAE,UAAW,CAAC,CAAC,CACpD,CAAC,CAEDvB,SAAS,CAAC,IAAM,CACd,KAAM,CAAAoB,WAAW,CAAGlB,IAAI,CAACkB,WAAW,CACpC,GAAI,CAACA,WAAW,CAAE,OAElB,KAAM,CAAAI,WAAW,CAAGrB,UAAU,CAC5BC,UAAU,CAACH,SAAS,CAAE,SAASmB,WAAW,CAACE,GAAG,UAAU,CAAC,CACxDG,QAAQ,EAAK,CACZA,QAAQ,CAACC,IAAI,CAACC,OAAO,CAACtB,GAAG,EAAI,CAC3B,KAAM,CAAAuB,MAAM,CAAGvB,GAAG,CAACwB,IAAI,CAAC,CAAC,CACzB,GAAID,MAAM,CAACL,MAAM,GAAK,SAAS,CAAE,CAC/B,KAAM,CAAAO,MAAM,CAAGC,MAAM,CAACC,OAAO,CAAC,GAAGJ,MAAM,CAACK,QAAQ,uBAAuB,CAAC,CACxE,GAAIH,MAAM,CAAEZ,YAAY,CAACb,GAAG,CAAC6B,EAAE,CAAC,CAClC,CACF,CAAC,CAAC,CACJ,CACF,CAAC,CAED,MAAO,IAAMV,WAAW,CAAC,CAAC,CAC5B,CAAC,CAAE,EAAE,CAAC,CAEN,mBACEZ,KAAA,QAAKuB,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BxB,KAAA,QAAKuB,SAAS,CAAC,8BAA8B,CAAAC,QAAA,eAC3C1B,IAAA,WAAQ2B,OAAO,CAAEA,CAAA,GAAMtB,cAAc,CAAC,IAAI,CAAE,CAACoB,SAAS,CAAC,0CAA0C,CAAAC,QAAA,CAAC,UAAQ,CAAQ,CAAC,cACnH1B,IAAA,CAACF,MAAM,EAAC8B,gBAAgB,CAAGC,IAAI,EAAKtB,cAAc,CAACsB,IAAI,CAACL,EAAE,CAAE,CAACM,cAAc,CAAExB,WAAY,CAAE,CAAC,EACzF,CAAC,cAENN,IAAA,CAACH,SAAS,EACRkC,MAAM,CAAE3B,WAAY,CACpB4B,OAAO,CAAEA,CAAA,GAAM3B,cAAc,CAAC,KAAK,CAAE,CACrC4B,YAAY,CAAEA,CAAA,GAAM,CAAC,CAAE,CACxB,CAAC,EAEC,CAAC,CAEV,CAEA,cAAe,CAAA9B,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}