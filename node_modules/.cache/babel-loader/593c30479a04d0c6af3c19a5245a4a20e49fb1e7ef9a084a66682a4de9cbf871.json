{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shantanu\\\\chatting_application\\\\src\\\\components\\\\ChatRoom.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { collection, query, orderBy, limit, addDoc, serverTimestamp, getDocs, updateDoc, doc } from 'firebase/firestore';\nimport { firestore, auth } from '../firebase';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport ChatMessage from './ChatMessage';\nimport Slider from './Slider';\nimport UserModal from './UserModal';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction genID(a, b) {\n  return [a, b].sort().join('_');\n}\nfunction ChatRoom() {\n  _s();\n  const [receiverUid, setReceiverUid] = useState(null); // For one-to-one chat\n  const [formValue, setFormValue] = useState('');\n  const [error, setError] = useState('');\n  const [messagesRef, setMessagesRef] = useState(null);\n  const [users, setUsers] = useState([]); // State to hold all users\n  const [addedContacts, setAddedContacts] = useState([]); // State to hold added contacts\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [messages] = useCollectionData(messagesRef, {\n    idField: 'id'\n  });\n\n  // Fetch users from Firestore on component mount\n  useEffect(() => {\n    const fetchUsers = async () => {\n      const usersCollection = collection(firestore, 'users');\n      const userDocs = await getDocs(usersCollection);\n      const usersData = userDocs.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setUsers(usersData); // Set users to state\n    };\n    fetchUsers();\n  }, []);\n\n  // Fetch added contacts when user signs in\n  useEffect(() => {\n    const fetchAddedContacts = async () => {\n      if (auth.currentUser) {\n        const userDoc = await getDocs(doc(firestore, 'users', auth.currentUser.uid));\n        const userData = userDoc.data();\n        setAddedContacts(userData.contacts || []); // Set added contacts\n      }\n    };\n    fetchAddedContacts();\n  }, []);\n  useEffect(() => {\n    if (receiverUid && auth.currentUser) {\n      const messagesCollectionRef = collection(firestore, `conversations/${genID(auth.currentUser.uid, receiverUid)}/messages`);\n      const messagesQuery = query(messagesCollectionRef, orderBy('createdAt'), limit(25));\n      setMessagesRef(messagesQuery); // Set the query instead of a reference\n    } else {\n      setMessagesRef(null); // Reset when no user is selected\n    }\n  }, [receiverUid]);\n  const sendMessage = async e => {\n    e.preventDefault();\n    if (!auth.currentUser || !receiverUid) {\n      setError('You must select a user and be logged in to send messages.');\n      return;\n    }\n    try {\n      await addDoc(collection(firestore, `conversations/${genID(auth.currentUser.uid, receiverUid)}/messages`), {\n        text: formValue.trim(),\n        createdAt: serverTimestamp(),\n        from_uid: auth.currentUser.uid,\n        to_uid: receiverUid\n      });\n      setFormValue('');\n      setError('');\n    } catch (err) {\n      console.error('Error sending message:', err);\n      setError('Failed to send message. Please try again.');\n    }\n  };\n  const handleUserAdded = async newUserId => {\n    // Add user ID to the current user's contacts\n    if (auth.currentUser) {\n      const userRef = doc(firestore, 'users', auth.currentUser.uid);\n      await updateDoc(userRef, {\n        contacts: [...addedContacts, newUserId] // Update contacts array\n      });\n\n      // Refresh the added contacts state\n      setAddedContacts(prev => [...prev, newUserId]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-none w-1/4 h-full p-5 bg-gray-800\",\n      children: auth.currentUser && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsModalOpen(true),\n          className: \"mb-4 bg-green-500 text-white p-2 rounded\",\n          children: \"Add User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Slider, {\n          users: users.filter(u => addedContacts.includes(u.id) && u.id !== auth.currentUser.uid),\n          selectUserToChat: user => setReceiverUid(user.id),\n          selectedUserId: receiverUid\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow flex flex-col pt-5 pr-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"flex-grow overflow-auto p-4 rounded-xl bg-gradient-to-br from-indigo-900 via-purple-900 to-gray-900 shadow-inner\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: messages && messages.map((msg, i) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n            message: msg\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: sendMessage,\n        className: \"bg-gray-800 p-4 mb-5 flex items-center bg-gradient-to-br via-purple-900 from-indigo-900 to-gray-900 space-x-2 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: formValue,\n          onChange: e => setFormValue(e.target.value),\n          placeholder: \"Say something nice\",\n          className: \"flex-grow p-2 text-lg bg-gray-700 text-white border border-gray-600 rounded-lg focus:outline-none focus:ring-2 \\r focus:ring-blue-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"bg-blue-500 text-white p-2 rounded\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserModal, {\n      isOpen: isModalOpen,\n      onClose: () => setIsModalOpen(false),\n      onUserAdded: handleUserAdded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatRoom, \"Rar9ir7yiesP31LffL+7nW1jEx0=\", false, function () {\n  return [useCollectionData];\n});\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useState","useEffect","collection","query","orderBy","limit","addDoc","serverTimestamp","getDocs","updateDoc","doc","firestore","auth","useCollectionData","ChatMessage","Slider","UserModal","jsxDEV","_jsxDEV","Fragment","_Fragment","genID","a","b","sort","join","ChatRoom","_s","receiverUid","setReceiverUid","formValue","setFormValue","error","setError","messagesRef","setMessagesRef","users","setUsers","addedContacts","setAddedContacts","isModalOpen","setIsModalOpen","messages","idField","fetchUsers","usersCollection","userDocs","usersData","docs","map","id","data","fetchAddedContacts","currentUser","userDoc","uid","userData","contacts","messagesCollectionRef","messagesQuery","sendMessage","e","preventDefault","text","trim","createdAt","from_uid","to_uid","err","console","handleUserAdded","newUserId","userRef","prev","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","filter","u","includes","selectUserToChat","user","selectedUserId","msg","i","message","onSubmit","value","onChange","target","placeholder","type","isOpen","onClose","onUserAdded","_c","$RefreshReg$"],"sources":["C:/Users/Shantanu/chatting_application/src/components/ChatRoom.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { collection, query, orderBy, limit, addDoc, serverTimestamp, getDocs, updateDoc, doc } from 'firebase/firestore'; \r\nimport { firestore, auth } from '../firebase'; \r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\nimport ChatMessage from './ChatMessage';\r\nimport Slider from './Slider';\r\nimport UserModal from './UserModal';\r\n\r\nfunction genID(a, b) {\r\n  return [a, b].sort().join('_');\r\n}\r\n\r\nfunction ChatRoom() {\r\n  const [receiverUid, setReceiverUid] = useState(null);  // For one-to-one chat\r\n  const [formValue, setFormValue] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [messagesRef, setMessagesRef] = useState(null);\r\n  const [users, setUsers] = useState([]); // State to hold all users\r\n  const [addedContacts, setAddedContacts] = useState([]); // State to hold added contacts\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n const [messages] = useCollectionData(messagesRef, { idField: 'id' });\r\n\r\n  // Fetch users from Firestore on component mount\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      const usersCollection = collection(firestore, 'users');\r\n      const userDocs = await getDocs(usersCollection);\r\n      const usersData = userDocs.docs.map(doc => ({\r\n        id: doc.id,\r\n        ...doc.data(), \r\n      }));\r\n      setUsers(usersData); // Set users to state\r\n    };\r\n\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  // Fetch added contacts when user signs in\r\n  useEffect(() => {\r\n    const fetchAddedContacts = async () => {\r\n      if (auth.currentUser) {\r\n        const userDoc = await getDocs(doc(firestore, 'users', auth.currentUser.uid));\r\n        const userData = userDoc.data();\r\n        setAddedContacts(userData.contacts || []); // Set added contacts\r\n      }\r\n    };\r\n\r\n    fetchAddedContacts();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (receiverUid && auth.currentUser) {\r\n      const messagesCollectionRef = collection(\r\n        firestore, \r\n        `conversations/${genID(auth.currentUser.uid, receiverUid)}/messages`\r\n      );\r\n      const messagesQuery = query(messagesCollectionRef, orderBy('createdAt'), limit(25));\r\n      setMessagesRef(messagesQuery); // Set the query instead of a reference\r\n    } else {\r\n      setMessagesRef(null); // Reset when no user is selected\r\n    }\r\n  }, [receiverUid]);\r\n  \r\n  \r\n\r\n  const sendMessage = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!auth.currentUser || !receiverUid) {\r\n      setError('You must select a user and be logged in to send messages.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await addDoc(collection(\r\n        firestore, \r\n        `conversations/${genID(auth.currentUser.uid, receiverUid)}/messages`\r\n      ), {\r\n        text: formValue.trim(),\r\n        createdAt: serverTimestamp(),\r\n        from_uid: auth.currentUser.uid,\r\n        to_uid: receiverUid,\r\n      });\r\n\r\n      setFormValue('');\r\n      setError('');\r\n    } catch (err) {\r\n      console.error('Error sending message:', err);\r\n      setError('Failed to send message. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleUserAdded = async (newUserId) => {\r\n    // Add user ID to the current user's contacts\r\n    if (auth.currentUser) {\r\n      const userRef = doc(firestore, 'users', auth.currentUser.uid);\r\n      await updateDoc(userRef, {\r\n        contacts: [...addedContacts, newUserId] // Update contacts array\r\n      });\r\n      \r\n      // Refresh the added contacts state\r\n      setAddedContacts((prev) => [...prev, newUserId]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex h-screen\">\r\n      <div className=\"flex-none w-1/4 h-full p-5 bg-gray-800\">\r\n        {auth.currentUser && (\r\n          <>\r\n            <button \r\n              onClick={() => setIsModalOpen(true)} \r\n              className=\"mb-4 bg-green-500 text-white p-2 rounded\">\r\n              Add User\r\n            </button>\r\n            <Slider \r\n              users={users.filter((u) => addedContacts.includes(u.id) && u.id !== auth.currentUser.uid)} \r\n              selectUserToChat={(user) => setReceiverUid(user.id)} \r\n              selectedUserId={receiverUid} \r\n            />\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"flex-grow flex flex-col pt-5 pr-5\">\r\n        <main className=\"flex-grow overflow-auto p-4 rounded-xl bg-gradient-to-br from-indigo-900 via-purple-900 to-gray-900 shadow-inner\">\r\n          <div className=\"space-y-4\">\r\n            {messages && messages.map((msg, i) => (\r\n              <ChatMessage key={i} message={msg} />\r\n            ))}\r\n          </div>\r\n        </main>\r\n\r\n        <form \r\n          onSubmit={sendMessage} \r\n          className=\"bg-gray-800 p-4 mb-5 flex items-center bg-gradient-to-br via-purple-900 from-indigo-900 to-gray-900 space-x-2 rounded-lg\"\r\n        >\r\n          <input\r\n            value={formValue}\r\n            onChange={(e) => setFormValue(e.target.value)}\r\n            placeholder=\"Say something nice\"\r\n            className=\"flex-grow p-2 text-lg bg-gray-700 text-white border border-gray-600 rounded-lg focus:outline-none focus:ring-2 \r\n            focus:ring-blue-500\"\r\n          />\r\n          <button type=\"submit\" className=\"bg-blue-500 text-white p-2 rounded\">\r\n            Send\r\n          </button>\r\n        </form>\r\n        {error && <p className=\"text-red-500\">{error}</p>}\r\n      </div>\r\n      \r\n      <UserModal \r\n        isOpen={isModalOpen} \r\n        onClose={() => setIsModalOpen(false)} \r\n        onUserAdded={handleUserAdded} \r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatRoom;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}