{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shantanu\\\\chatting_application\\\\src\\\\components\\\\UserModal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { collection, getDocs, addDoc } from 'firebase/firestore';\nimport { firestore } from '../firebase';\nimport UserModal from './UserModal';\nimport Slider from './Slider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatRoom() {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const fetchUsers = async () => {\n    const usersCollection = collection(firestore, 'users');\n    const userDocs = await getDocs(usersCollection);\n    const usersData = userDocs.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n    setUsers(usersData);\n  };\n  const handleUserAdded = () => {\n    fetchUsers(); // Refresh user list when a user is added\n  };\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n  useEffect(() => {\n    fetchUsers(); // Fetch users on component mount\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: openModal,\n      className: \"bg-blue-500 text-white p-2 rounded\",\n      children: \"Add User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Slider, {\n      users: users,\n      selectUserToChat: () => {},\n      selectedUserId: null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserModal, {\n      isOpen: isModalOpen,\n      onClose: closeModal,\n      onUserAdded: handleUserAdded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatRoom, \"QYKBKmkofOC9CJYl2EkZn82Q7rs=\");\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useState","useEffect","collection","getDocs","addDoc","firestore","UserModal","Slider","jsxDEV","_jsxDEV","ChatRoom","_s","users","setUsers","isModalOpen","setIsModalOpen","fetchUsers","usersCollection","userDocs","usersData","docs","map","doc","id","data","handleUserAdded","openModal","closeModal","children","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","selectUserToChat","selectedUserId","isOpen","onClose","onUserAdded","_c","$RefreshReg$"],"sources":["C:/Users/Shantanu/chatting_application/src/components/UserModal.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { collection, getDocs, addDoc } from 'firebase/firestore';\r\nimport { firestore } from '../firebase';\r\nimport UserModal from './UserModal';\r\nimport Slider from './Slider';\r\n\r\nfunction ChatRoom() {\r\n  const [users, setUsers] = useState([]);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const fetchUsers = async () => {\r\n    const usersCollection = collection(firestore, 'users');\r\n    const userDocs = await getDocs(usersCollection);\r\n    const usersData = userDocs.docs.map(doc => ({\r\n      id: doc.id,\r\n      ...doc.data(),\r\n    }));\r\n    setUsers(usersData);\r\n  };\r\n\r\n  const handleUserAdded = () => {\r\n    fetchUsers(); // Refresh user list when a user is added\r\n  };\r\n\r\n  const openModal = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchUsers(); // Fetch users on component mount\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={openModal} className=\"bg-blue-500 text-white p-2 rounded\">\r\n        Add User\r\n      </button>\r\n      <Slider users={users} selectUserToChat={() => {}} selectedUserId={null} />\r\n      <UserModal isOpen={isModalOpen} onClose={closeModal} onUserAdded={handleUserAdded} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatRoom;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,UAAU,EAAEC,OAAO,EAAEC,MAAM,QAAQ,oBAAoB;AAChE,SAASC,SAAS,QAAQ,aAAa;AACvC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMgB,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMC,eAAe,GAAGf,UAAU,CAACG,SAAS,EAAE,OAAO,CAAC;IACtD,MAAMa,QAAQ,GAAG,MAAMf,OAAO,CAACc,eAAe,CAAC;IAC/C,MAAME,SAAS,GAAGD,QAAQ,CAACE,IAAI,CAACC,GAAG,CAACC,GAAG,KAAK;MAC1CC,EAAE,EAAED,GAAG,CAACC,EAAE;MACV,GAAGD,GAAG,CAACE,IAAI,CAAC;IACd,CAAC,CAAC,CAAC;IACHX,QAAQ,CAACM,SAAS,CAAC;EACrB,CAAC;EAED,MAAMM,eAAe,GAAGA,CAAA,KAAM;IAC5BT,UAAU,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC;EAED,MAAMU,SAAS,GAAGA,CAAA,KAAM;IACtBX,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMY,UAAU,GAAGA,CAAA,KAAM;IACvBZ,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;EAEDd,SAAS,CAAC,MAAM;IACde,UAAU,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAQoB,OAAO,EAAEH,SAAU;MAACI,SAAS,EAAC,oCAAoC;MAAAF,QAAA,EAAC;IAE3E;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTzB,OAAA,CAACF,MAAM;MAACK,KAAK,EAAEA,KAAM;MAACuB,gBAAgB,EAAEA,CAAA,KAAM,CAAC,CAAE;MAACC,cAAc,EAAE;IAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1EzB,OAAA,CAACH,SAAS;MAAC+B,MAAM,EAAEvB,WAAY;MAACwB,OAAO,EAAEX,UAAW;MAACY,WAAW,EAAEd;IAAgB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClF,CAAC;AAEV;AAACvB,EAAA,CAvCQD,QAAQ;AAAA8B,EAAA,GAAR9B,QAAQ;AAyCjB,eAAeA,QAAQ;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}