{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shantanu\\\\chatting_application\\\\src\\\\components\\\\ChatRoom.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ChatMessage from './ChatMessage';\nimport Slider from './Slider';\nimport { auth } from '../firebase'; // Assuming you still need Firebase for authentication\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction genID(a, b) {\n  return [a, b].sort().join('_');\n}\nfunction ChatRoom() {\n  _s();\n  const [receiverUid, setReceiverUid] = useState(null); // For one-to-one chat\n  const [formValue, setFormValue] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [error, setError] = useState('');\n  const users = [{\n    id: \"Zwv4kSkaQ2gW6saeexEKnbqQug73\",\n    displayName: 'Anandan',\n    photo: 'logo1.png'\n  }, {\n    id: \"UluQHwfE1ec813UTVrWZHf8MXFy1\",\n    displayName: 'Shanthanu',\n    photo: 'logo2.png'\n  }];\n\n  // Function to register a user via API (if needed)\n  const registerUser = async () => {\n    try {\n      const response = await fetch('http://localhost:3000/register/user', {\n        // Adjust the API URL accordingly\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          uuid: auth.currentUser.uid,\n          email: auth.currentUser.email\n        })\n      });\n      const data = await response.json();\n      console.log(data.message); // Output: user registered\n    } catch (error) {\n      console.error('Error registering user:', error);\n    }\n  };\n\n  // Function to fetch messages via API\n  const fetchMessages = async () => {\n    try {\n      const response = await fetch(`http://localhost:3000/conversations/${genID(auth.currentUser.uid, receiverUid)}/messages`);\n      const data = await response.json();\n      setMessages(data);\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n    }\n  };\n\n  // Function to send a message via API\n  const sendMessage = async e => {\n    e.preventDefault();\n    if (!auth.currentUser || !receiverUid) {\n      setError('You must select a user and be logged in to send messages.');\n      return;\n    }\n    try {\n      await fetch(`http://localhost:3000/conversations/${genID(auth.currentUser.uid, receiverUid)}/messages`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text: formValue.trim(),\n          from_uid: auth.currentUser.uid,\n          to_uid: receiverUid\n        })\n      });\n      setFormValue(''); // Clear the input field after sending the message\n      setError('');\n      fetchMessages(); // Refresh messages after sending\n    } catch (err) {\n      console.error('Error sending message:', err);\n      setError('Failed to send message. Please try again.');\n    }\n  };\n\n  // Trigger fetching messages when receiverUid changes\n  useEffect(() => {\n    if (receiverUid) {\n      fetchMessages();\n    }\n  }, [receiverUid]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-none w-1/4 h-full p-5 bg-gray-800\",\n      children: /*#__PURE__*/_jsxDEV(Slider, {\n        users: users.filter(u => u.id !== auth.currentUser.uid),\n        selectUserToChat: user => setReceiverUid(user.id),\n        selectedUserId: receiverUid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow flex flex-col pt-5 pr-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"flex-grow overflow-auto p-4 rounded-xl bg-gradient-to-br from-indigo-900 via-purple-900 to-gray-900 shadow-inner\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: messages && messages.map((msg, i) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n            message: msg\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: sendMessage,\n        className: \"bg-gray-800 p-4 mb-5 flex items-center bg-gradient-to-br via-purple-900 from-indigo-900 to-gray-900 space-x-2 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: formValue,\n          onChange: e => setFormValue(e.target.value),\n          placeholder: \"Say something nice\",\n          className: \"flex-grow p-2 text-lg bg-gray-700 text-white border border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-600 shadow-inner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !formValue || !receiverUid,\n          className: \"w-16 h-12 bg-blue-600 rounded-lg flex items-center justify-center text-white text-2xl shadow-lg hover:bg-blue-700 disabled:opacity-50 transition-all duration-200 transform hover:scale-105\",\n          children: \"\\uD83D\\uDD4A\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 text-center mt-4\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatRoom, \"MsNeJvICVHntlNlUanjbhSLDGok=\");\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useState","useEffect","ChatMessage","Slider","auth","jsxDEV","_jsxDEV","genID","a","b","sort","join","ChatRoom","_s","receiverUid","setReceiverUid","formValue","setFormValue","messages","setMessages","error","setError","users","id","displayName","photo","registerUser","response","fetch","method","headers","body","JSON","stringify","uuid","currentUser","uid","email","data","json","console","log","message","fetchMessages","sendMessage","e","preventDefault","text","trim","from_uid","to_uid","err","className","children","filter","u","selectUserToChat","user","selectedUserId","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","i","onSubmit","value","onChange","target","placeholder","type","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Shantanu/chatting_application/src/components/ChatRoom.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ChatMessage from './ChatMessage';\r\nimport Slider from './Slider';\r\nimport { auth } from '../firebase'; // Assuming you still need Firebase for authentication\r\n\r\nfunction genID(a, b) {\r\n  return [a, b].sort().join('_');\r\n}\r\n\r\nfunction ChatRoom() {\r\n  const [receiverUid, setReceiverUid] = useState(null);  // For one-to-one chat\r\n  const [formValue, setFormValue] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const [error, setError] = useState('');\r\n\r\n  const users = [\r\n    { id: \"Zwv4kSkaQ2gW6saeexEKnbqQug73\", displayName: 'Anandan', photo: 'logo1.png' },\r\n    { id: \"UluQHwfE1ec813UTVrWZHf8MXFy1\", displayName: 'Shanthanu', photo: 'logo2.png' },\r\n  ];\r\n\r\n  // Function to register a user via API (if needed)\r\n  const registerUser = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:3000/register/user', {  // Adjust the API URL accordingly\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          uuid: auth.currentUser.uid,\r\n          email: auth.currentUser.email,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      console.log(data.message);  // Output: user registered\r\n    } catch (error) {\r\n      console.error('Error registering user:', error);\r\n    }\r\n  };\r\n\r\n  // Function to fetch messages via API\r\n  const fetchMessages = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:3000/conversations/${genID(auth.currentUser.uid, receiverUid)}/messages`);\r\n      const data = await response.json();\r\n      setMessages(data);\r\n    } catch (error) {\r\n      console.error('Error fetching messages:', error);\r\n    }\r\n  };\r\n\r\n  // Function to send a message via API\r\n  const sendMessage = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!auth.currentUser || !receiverUid) {\r\n      setError('You must select a user and be logged in to send messages.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await fetch(`http://localhost:3000/conversations/${genID(auth.currentUser.uid, receiverUid)}/messages`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          text: formValue.trim(),\r\n          from_uid: auth.currentUser.uid,\r\n          to_uid: receiverUid,\r\n        }),\r\n      });\r\n\r\n      setFormValue('');  // Clear the input field after sending the message\r\n      setError('');\r\n      fetchMessages(); // Refresh messages after sending\r\n    } catch (err) {\r\n      console.error('Error sending message:', err);\r\n      setError('Failed to send message. Please try again.');\r\n    }\r\n  };\r\n\r\n  // Trigger fetching messages when receiverUid changes\r\n  useEffect(() => {\r\n    if (receiverUid) {\r\n      fetchMessages();\r\n    }\r\n  }, [receiverUid]);\r\n\r\n  return (\r\n    <div className=\"flex h-screen\">\r\n      <div className=\"flex-none w-1/4 h-full p-5 bg-gray-800\">\r\n        <Slider \r\n          users={users.filter((u) => u.id !== auth.currentUser.uid)} \r\n          selectUserToChat={(user) => setReceiverUid(user.id)} \r\n          selectedUserId={receiverUid} \r\n        />\r\n      </div>\r\n\r\n      <div className=\"flex-grow flex flex-col pt-5 pr-5\">\r\n        <main className=\"flex-grow overflow-auto p-4 rounded-xl bg-gradient-to-br from-indigo-900 via-purple-900 to-gray-900 shadow-inner\">\r\n          <div className=\"space-y-4\">\r\n            {messages && messages.map((msg, i) => (\r\n              <ChatMessage key={i} message={msg} />\r\n            ))}\r\n          </div>\r\n        </main>\r\n\r\n        <form \r\n          onSubmit={sendMessage} \r\n          className=\"bg-gray-800 p-4 mb-5 flex items-center bg-gradient-to-br via-purple-900 from-indigo-900 to-gray-900 space-x-2 rounded-lg\"\r\n        >\r\n          <input\r\n            value={formValue}\r\n            onChange={(e) => setFormValue(e.target.value)}\r\n            placeholder=\"Say something nice\"\r\n            className=\"flex-grow p-2 text-lg bg-gray-700 text-white border border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-600 shadow-inner\"\r\n          />\r\n          <button \r\n            type=\"submit\" \r\n            disabled={!formValue || !receiverUid}\r\n            className=\"w-16 h-12 bg-blue-600 rounded-lg flex items-center justify-center text-white text-2xl shadow-lg hover:bg-blue-700 disabled:opacity-50 transition-all duration-200 transform hover:scale-105\"\r\n          >\r\n            🕊️\r\n          </button>\r\n        </form>\r\n\r\n        {error && <p className=\"text-red-500 text-center mt-4\">{error}</p>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatRoom;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}