{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shantanu\\\\chatting_application\\\\src\\\\components\\\\ChatRoom.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Slider from './Slider';\nimport UserModal from './UserModal';\nimport { addDoc, collection, onSnapshot, query, where, updateDoc, doc } from 'firebase/firestore';\nimport { firestore } from '../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chatroom({\n  currentUser\n}) {\n  _s();\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [pendingInvites, setPendingInvites] = useState([]);\n  useEffect(() => {\n    if (currentUser) {\n      // Set up real-time listener for pending invitations received by the current user\n      const q = query(collection(firestore, 'requests'), where('toUserId', '==', currentUser.id), where('status', '==', 'pending'));\n      const unsubscribe = onSnapshot(q, snapshot => {\n        const invites = snapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setPendingInvites(invites);\n      });\n      return () => unsubscribe();\n    }\n  }, [currentUser]);\n  const selectUserToChat = user => {\n    setSelectedUser(user);\n  };\n  const sendInvitation = async toUserId => {\n    try {\n      await addDoc(collection(firestore, 'requests'), {\n        fromUserId: currentUser.id,\n        toUserId,\n        status: 'pending',\n        timestamp: new Date()\n      });\n      alert('Invitation sent successfully.');\n    } catch (error) {\n      console.error('Error sending invitation:', error);\n    }\n  };\n  const handleAcceptInvite = async inviteId => {\n    try {\n      const inviteRef = doc(firestore, 'requests', inviteId);\n      await updateDoc(inviteRef, {\n        status: 'accepted'\n      });\n      setPendingInvites(prev => prev.filter(invite => invite.id !== inviteId));\n    } catch (error) {\n      console.error('Error accepting invitation:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/4\",\n      children: /*#__PURE__*/_jsxDEV(Slider, {\n        currentUserId: currentUser.id,\n        selectUserToChat: selectUserToChat,\n        selectedUserId: selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-3/4 p-4\",\n      children: [selectedUser ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold\",\n          children: [\"Chat with \", selectedUser.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500\",\n        children: \"Select a user to start chatting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsModalOpen(true),\n        className: \"bg-blue-500 text-white p-2 rounded mt-4\",\n        children: \"Add User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), pendingInvites.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold\",\n          children: \"Pending Invitations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), pendingInvites.map(invite => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between p-2 border-b\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: invite.fromUserId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAcceptInvite(invite.id),\n            className: \"bg-green-500 text-white p-1 rounded\",\n            children: \"Accept\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this)]\n        }, invite.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserModal, {\n      isOpen: isModalOpen,\n      onClose: () => setIsModalOpen(false),\n      onUserAdded: sendInvitation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatroom, \"x0vhtV4yU6atloqroaW2t9Q5Jtc=\");\n_c = Chatroom;\nexport default Chatroom;\nvar _c;\n$RefreshReg$(_c, \"Chatroom\");","map":{"version":3,"names":["React","useState","useEffect","Slider","UserModal","addDoc","collection","onSnapshot","query","where","updateDoc","doc","firestore","jsxDEV","_jsxDEV","Chatroom","currentUser","_s","selectedUser","setSelectedUser","isModalOpen","setIsModalOpen","pendingInvites","setPendingInvites","q","id","unsubscribe","snapshot","invites","docs","map","data","selectUserToChat","user","sendInvitation","toUserId","fromUserId","status","timestamp","Date","alert","error","console","handleAcceptInvite","inviteId","inviteRef","prev","filter","invite","className","children","currentUserId","selectedUserId","fileName","_jsxFileName","lineNumber","columnNumber","name","onClick","length","isOpen","onClose","onUserAdded","_c","$RefreshReg$"],"sources":["C:/Users/Shantanu/chatting_application/src/components/ChatRoom.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Slider from './Slider';\r\nimport UserModal from './UserModal';\r\nimport { addDoc, collection, onSnapshot, query, where, updateDoc, doc } from 'firebase/firestore';\r\nimport { firestore } from '../firebase';\r\n\r\nfunction Chatroom({ currentUser }) {\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [pendingInvites, setPendingInvites] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      // Set up real-time listener for pending invitations received by the current user\r\n      const q = query(\r\n        collection(firestore, 'requests'),\r\n        where('toUserId', '==', currentUser.id),\r\n        where('status', '==', 'pending')\r\n      );\r\n\r\n      const unsubscribe = onSnapshot(q, (snapshot) => {\r\n        const invites = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n        setPendingInvites(invites);\r\n      });\r\n\r\n      return () => unsubscribe();\r\n    }\r\n  }, [currentUser]);\r\n\r\n  const selectUserToChat = (user) => {\r\n    setSelectedUser(user);\r\n  };\r\n\r\n  const sendInvitation = async (toUserId) => {\r\n    try {\r\n      await addDoc(collection(firestore, 'requests'), {\r\n        fromUserId: currentUser.id,\r\n        toUserId,\r\n        status: 'pending',\r\n        timestamp: new Date(),\r\n      });\r\n      alert('Invitation sent successfully.');\r\n    } catch (error) {\r\n      console.error('Error sending invitation:', error);\r\n    }\r\n  };\r\n\r\n  const handleAcceptInvite = async (inviteId) => {\r\n    try {\r\n      const inviteRef = doc(firestore, 'requests', inviteId);\r\n      await updateDoc(inviteRef, { status: 'accepted' });\r\n      setPendingInvites((prev) => prev.filter(invite => invite.id !== inviteId));\r\n    } catch (error) {\r\n      console.error('Error accepting invitation:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex\">\r\n      <div className=\"w-1/4\">\r\n        <Slider\r\n          currentUserId={currentUser.id}\r\n          selectUserToChat={selectUserToChat}\r\n          selectedUserId={selectedUser?.id}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"w-3/4 p-4\">\r\n        {selectedUser ? (\r\n          <div>\r\n            <h2 className=\"text-xl font-bold\">Chat with {selectedUser.name}</h2>\r\n            {/* Chat messages and input go here */}\r\n          </div>\r\n        ) : (\r\n          <p className=\"text-gray-500\">Select a user to start chatting</p>\r\n        )}\r\n\r\n        <button\r\n          onClick={() => setIsModalOpen(true)}\r\n          className=\"bg-blue-500 text-white p-2 rounded mt-4\"\r\n        >\r\n          Add User\r\n        </button>\r\n\r\n        {pendingInvites.length > 0 && (\r\n          <div className=\"mt-4\">\r\n            <h3 className=\"text-lg font-semibold\">Pending Invitations</h3>\r\n            {pendingInvites.map((invite) => (\r\n              <div key={invite.id} className=\"flex items-center justify-between p-2 border-b\">\r\n                <span>{invite.fromUserId}</span>\r\n                <button\r\n                  onClick={() => handleAcceptInvite(invite.id)}\r\n                  className=\"bg-green-500 text-white p-1 rounded\"\r\n                >\r\n                  Accept\r\n                </button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <UserModal\r\n        isOpen={isModalOpen}\r\n        onClose={() => setIsModalOpen(false)}\r\n        onUserAdded={sendInvitation}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chatroom;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}